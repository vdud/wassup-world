// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model user {
    id   String @id @default(auto()) @map("_id") @db.ObjectId
    name String @unique

    ownedGroups groups[]
    allGroups   allUsers[]
    messages    message[]

    @@unique([name, id])
}

model groups {
    id        String  @id @default(auto()) @map("_id") @db.ObjectId
    name      String  @unique
    userOwner user?   @relation(fields: [OwnerId, ownerName], references: [id, name])
    ownerName String?
    OwnerId   String?

    updatedAt DateTime @updatedAt

    messages message[]

    nature nature @default(PUBLIC)

    allUsers allUsers[]

    @@unique([id, name])
}

model message {
    id String @id @default(auto()) @map("_id") @db.ObjectId

    // Groups      allUsers @relation(fields: [userGroupId, groupName], references: [id, groupName])
    // userGroupId String
    // groupName   String

    text     String @db.String
    user     user   @relation(fields: [userName, senderId], references: [name, id])
    userName String
    senderId String

    group     groups @relation(fields: [groupName, groupId], references: [name, id])
    groupName String
    groupId   String

    createdAt DateTime @default(now())
}

model allUsers {
    id String @id @default(auto()) @map("_id") @db.ObjectId

    user     user   @relation(fields: [userId, userName], references: [id, name])
    userId   String
    userName String

    group     groups @relation(fields: [groupId, groupName], references: [id, name])
    groupId   String
    groupName String
    role      role   @default(USER)

    @@unique([userId, groupId])
}

enum nature {
    PUBLIC
    HASHTAGS
    LOCATIONS
}

enum role {
    ADMIN
    USER
}
